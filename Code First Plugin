package com.reddymcoff.firstplugin.commands;

import org.bukkit.attribute.Attribute;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Player;

public class FirstPluginCommands implements CommandExecutor {

    @Override
    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage("[First Plugin] Only players can use this command!");
            return true;
        }
        Player player = (Player) sender;

        // /heal
        if (cmd.getName().equalsIgnoreCase("heal")) {
            double maxHealth = player.getAttribute(Attribute.GENERIC_MAX_HEALTH).getDefaultValue();
            player.setHealth(maxHealth);
            player.sendMessage("§e[First Plugin] §e§l(!) §eYou have been healed!");
        }

        // /food
        else if (cmd.getName().equalsIgnoreCase("feed")) {
            player.setFoodLevel(20);
            player.sendMessage("§e[First Plugin] §e§l(!) §eYou have been fed!");
        }

        // /spawnentity
        else if (cmd.getName().equalsIgnoreCase("spawnentity")) {
            if (args.length >= 2) {
                try {
                    EntityType entity = EntityType.valueOf(args[0].toUpperCase());
                    int amount = Integer.parseInt(args[1]);
                    for (int i = 0; i < amount; i++) ;
                    {
                        player.getWorld().spawnEntity(player.getLocation(), entity);
                    }
                } catch (IllegalArgumentException e) {
                    player.sendMessage("§c[First Plugin] §c§l(!) §cThat is not a valid entity!");
                }
            } else {
                player.sendMessage("§e[First Plugin] §e§l(!) §e/spawnentity <mob> <amount>");
            }
        }
        return true;
    }
}
